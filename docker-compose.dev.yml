version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: halalcheck-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: halalcheck_dev
      POSTGRES_USER: halalcheck
      POSTGRES_PASSWORD: dev_password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./backend/database/migrations:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U halalcheck -d halalcheck_dev"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: halalcheck-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend API (Development)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: halalcheck-backend-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://halalcheck:dev_password@postgres:5432/halalcheck_dev
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev-jwt-secret-key-for-testing-only
      JWT_REFRESH_SECRET: dev-jwt-refresh-secret-key-for-testing-only
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY_TEST}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET_TEST}
      EMAIL_HOST: smtp.mailtrap.io
      EMAIL_PORT: 2525
      EMAIL_USER: ${MAILTRAP_USER}
      EMAIL_PASS: ${MAILTRAP_PASS}
      CORS_ORIGIN: http://localhost:3000
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Frontend Application (Development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: halalcheck-frontend-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3001
      NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY_TEST}
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      backend:
        condition: service_healthy

volumes:
  postgres_dev_data:
    driver: local