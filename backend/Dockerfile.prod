# HalalCheck EU - Production Backend Dockerfile
# Multi-stage build for optimized production image

# Build stage
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --only=production && npm cache clean --force

# Copy source code
COPY . .

# Build TypeScript
RUN npm run build

# Production stage
FROM node:18-alpine AS production

# Set NODE_ENV
ENV NODE_ENV=production

# Create app user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S halalcheck -u 1001

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install only production dependencies
RUN npm ci --only=production && npm cache clean --force

# Copy built application from builder stage
COPY --from=builder --chown=halalcheck:nodejs /app/dist ./dist
COPY --from=builder --chown=halalcheck:nodejs /app/src ./src

# Create necessary directories with proper permissions
RUN mkdir -p uploads logs && \
    chown -R halalcheck:nodejs uploads logs

# Copy migration files
COPY --chown=halalcheck:nodejs database/migrations ./database/migrations

# Install health check dependencies
RUN apk add --no-cache curl

# Switch to non-root user
USER halalcheck

# Expose port
EXPOSE 3001

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:3001/health || exit 1

# Start the application
CMD ["npm", "start"]